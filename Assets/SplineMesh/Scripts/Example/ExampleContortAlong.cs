using System.Collections;
using System.Collections.Generic;
using UnityEditor;
using UnityEngine;

namespace SplineMesh {
    /// <summary>
    /// Example of component to show the deformation of a mesh in a changing
    /// interval in spline space.
    /// 
    /// This component is only for demo purpose and is not intended to be used as-is.
    /// </summary>
    [ExecuteInEditMode]
   // [RequireComponent(typeof(Spline))]
    public class ExampleContortAlong : MonoBehaviour {
        private Spline spline;
        private float rate = 0;
        public float aralik=10;
        private MeshBender meshBender;
        public GameObject kaynak;
        public int obje_sayisi;
        [SerializeField] private float obje_yeri;


        [HideInInspector]
        public GameObject [] generated;

        public Mesh mesh;
        public Material material;
        public Vector3 rotation;
        public Vector3 scale;

        public float DurationInSecond;

        private void OnEnable() {
            rate = 0;
            generated = new GameObject[obje_sayisi];
            Init();
#if UNITY_EDITOR
            EditorApplication.update += EditorUpdate;
#endif
        }

        void OnDisable() {
#if UNITY_EDITOR
            EditorApplication.update -= EditorUpdate;
#endif
        }

        private void OnValidate() {
            Init();
        }

        void EditorUpdate() {
            rate = obje_yeri/spline.Length;
            if (rate > 1) {
                rate --;
            }
            Contort();
        }

        private void Contort() {
            for (int i = 0; i < obje_sayisi; i++) {
            if (generated[i] != null) {
                meshBender = generated[i].GetComponent<MeshBender>();
                    float z_aralik = spline.Length * rate + aralik * i;
                meshBender.SetInterval(spline, z_aralik);
                meshBender.ComputeIfNeeded();
            }
            }
        }

        private void Init() {
            for(int i = 0; i < obje_sayisi; i++) { 
            string generatedName = "generated by "+i + GetType().Name;
            var generatedTranform = transform.Find(generatedName);
            generated[i] = generatedTranform != null ? generatedTranform.gameObject : UOUtility.Create(generatedName, gameObject,
                typeof(MeshFilter),
                typeof(MeshRenderer),
                typeof(MeshBender));

            generated[i].GetComponent<MeshRenderer>().material = material;

            meshBender = generated[i].GetComponent<MeshBender>();
            spline = kaynak.GetComponent<Spline>();

            meshBender.Source = SourceMesh.Build(mesh)
                .Rotate(Quaternion.Euler(rotation))
                .Scale(scale);
            meshBender.Mode = MeshBender.FillingMode.Once;
            meshBender.SetInterval(spline,spline.Length * rate + i*aralik);
             }
        }
    }
}
